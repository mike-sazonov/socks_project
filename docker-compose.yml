services:
  app:
    build: ./
    volumes:
      - ./:/app
      - static:/app/static
      - media:/app/media
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - db
    env_file:
      - .env.docker
    command: sh -c "python3 manage.py collectstatic --no-input &&
                    python3 manage.py makemigrations &&
                    python3 manage.py migrate &&
                    gunicorn --workers=4 --reload --max-requests=1000 socks.wsgi -b 0.0.0.0:8000"


  db:
    container_name: socks_postgres
    image: postgres
    environment:
      - POSTGRES_DB=${PG_NAME}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    expose:
      - 5432
    volumes:
      - pgdb:/var/lib/postgresql/data
    restart: always

  nginx:
    container_name: nginx
    working_dir: /app
    image: nginx:stable
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static:/app/static
      - media:/app/media
      - ./docker/nginx/prod/:/etc/nginx/conf.d:ro
      - ./docker/certbot/conf:/etc/letsencrypt:ro
      - ./docker/certbot/www:/var/www/certbot:ro
    links:
      - app
    depends_on:
      - app

  certbot:
      image: certbot/certbot
      container_name: certbot
      volumes:
          - ./docker/certbot/conf:/etc/letsencrypt:rw
          - ./docker/certbot/www:/var/www/certbot:rw
#      command: certonly --webroot --webroot-path=/var/www/certbot/ --email mihailsazon@gmail.com --agree-tos --no-eff-email -d squad-socks.ru -d www.squad-socks.ru
      depends_on:
        - nginx

volumes:
  pgdb: null
  static: null
  media: null
